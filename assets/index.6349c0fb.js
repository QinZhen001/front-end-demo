import{a as w,j as s}from"./index.d257e875.js";const B=(r,t=[])=>new Promise((l,n)=>{t.push((a,c)=>a?n(a):l(c)),r.apply(null,t)}),u=r=>{if(r===null||typeof r!="object")return r;if(Array.isArray(r)){let t=[];for(let l of r)t.push(u(l));return t}else{let t={};const l=Object.keys(r);for(const n of l)t[n]=u(r[n]);return t}},C=async({exponential:r,interval:t,factor:l,jitter:n})=>{t=r?t*l:t,t&&await new Promise(a=>setTimeout(a,t+n))},i=async(r,t=[],l={})=>{let{retriesMax:n=3,interval:a=0,jitter:c=0,factor:e=2,onAttemptFail:k=C,exponential:h=!0,isCb:d}=l;c&&(c=Math.floor(Math.random()*c)+1);for(let y=0;y<n;y++)try{let o=null;return d?o=await B(r,u(t)):o=await r.apply(null,t),o}catch(o){if(n===y+1||Object.prototype.hasOwnProperty.call(o,"retryable")&&!o.retryable)throw o;if(!await k({error:o,currentRetry:y,retriesMax:n,interval:a,exponential:h,factor:e,jitter:c})&&k!==C)return}};const m=()=>"fn1";let f=0;const p=()=>new Promise((r,t)=>{setTimeout(()=>{f++==1?(r("second resolve"),f=0):t("second reject")},1e3)}),E=async()=>{throw new Error("Error")},g=r=>{r(null,"funCallBack")},A=(r,t)=>{t(null,r)},b=(r,t)=>{console.log("arg1",r);let l=new Error("funCallBackWithErr");t(l,r)},N=()=>w("div",{className:"retry",children:[s("button",{onClick:async()=>{const e=await i(m);console.log("retryNormal",e)},children:"retryNormal"}),s("button",{onClick:async()=>{const e=await i(E);console.log("retryError",e)},children:"retryError"}),s("button",{onClick:async()=>{const e=await i(p);console.log("retrySecond",e)},children:"retrySecond"}),s("button",{onClick:async()=>{const e=await i(g,[],{isCb:!0});console.log("retryCallBack",e)},children:"retryCallBack"}),s("button",{onClick:async()=>{const e=await i(A,[{value:"arg1"}],{isCb:!0});console.log("retryCallBackWithArgs",e)},children:"retryCallBackWithArgs"}),s("button",{onClick:async()=>{const e=await i(b,[{value:"arg1"}],{isCb:!0});console.log("retryCallBackWithErr",e)},children:"retryCallBackWithErr"})]});export{N as AsyncAwaitRetry,N as default};
