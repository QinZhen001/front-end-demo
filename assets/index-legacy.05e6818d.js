!function(){var t=document.createElement("style");t.innerHTML="button{margin:5px}\n",document.head.appendChild(t),System.register(["./index-legacy.5a89bc95.js"],(function(t){"use strict";var r,e;return{setters:[function(t){r=t.a,e=t.j}],execute:function(){const n=(t,r=[])=>new Promise(((e,n)=>{r.push(((t,r)=>t?n(t):e(r))),t.apply(null,r)})),o=t=>{if(null===t||"object"!=typeof t)return t;if(Array.isArray(t)){let r=[];for(let e of t)r.push(o(e));return r}{let r={};const e=Object.keys(t);for(const n of e)r[n]=o(t[n]);return r}},a=async({exponential:t,interval:r,factor:e,jitter:n})=>{(r=t?r*e:r)&&await new Promise((t=>setTimeout(t,r+n)))},l=async(t,r=[],e={})=>{let{retriesMax:l=3,interval:c=0,jitter:i=0,factor:s=2,onAttemptFail:y=a,exponential:u=!0,isCb:f}=e;i&&(i=Math.floor(Math.random()*i)+1);for(let d=0;d<l;d++)try{let e=null;return e=f?await n(t,o(r)):await t.apply(null,r),e}catch(h){if(l===d+1||Object.prototype.hasOwnProperty.call(h,"retryable")&&!h.retryable)throw h;if(!(await y({error:h,currentRetry:d,retriesMax:l,interval:c,exponential:u,factor:s,jitter:i}))&&y!==a)return}};const c=()=>"fn1";let i=0;const s=()=>new Promise(((t,r)=>{setTimeout((()=>{1==i++?(t("second resolve"),i=0):r("second reject")}),1e3)})),y=async()=>{throw new Error("Error")},u=t=>{t(null,"funCallBack")},f=(t,r)=>{r(null,t)},h=(t,r)=>{console.log("arg1",t),r(new Error("funCallBackWithErr"),t)},d=()=>r("div",{className:"retry",children:[e("button",{onClick:async()=>{const t=await l(c);console.log("retryNormal",t)},children:"retryNormal"}),e("button",{onClick:async()=>{const t=await l(y);console.log("retryError",t)},children:"retryError"}),e("button",{onClick:async()=>{const t=await l(s);console.log("retrySecond",t)},children:"retrySecond"}),e("button",{onClick:async()=>{const t=await l(u,[],{isCb:!0});console.log("retryCallBack",t)},children:"retryCallBack"}),e("button",{onClick:async()=>{const t=await l(f,[{value:"arg1"}],{isCb:!0});console.log("retryCallBackWithArgs",t)},children:"retryCallBackWithArgs"}),e("button",{onClick:async()=>{const t=await l(h,[{value:"arg1"}],{isCb:!0});console.log("retryCallBackWithErr",t)},children:"retryCallBackWithErr"})]});t({AsyncAwaitRetry:d,default:d})}}}))}();
